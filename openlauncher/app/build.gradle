apply plugin: 'com.android.application'

android {
    compileSdkVersion version_setup_compileSdk

    defaultConfig {
        minSdkVersion version_setup_minSdk
        targetSdkVersion version_setup_targetSdk

        flavorDimensions "versionCode"
        multiDexEnabled false


        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
        buildConfigField "String[]", "DETECTED_ANDROID_LOCALES", "${findUsedAndroidLocales()}"
        buildConfigField "String", "BUILD_DATE", "\"${getBuildDate()}\""
        buildConfigField "String", "GITHASH", "\"${getGitHash()}\""
        resValue "string", "manifest_package_id", "com.benny.openlauncher"

        resValue 'string', 'app_name', "OpenLauncher"

        applicationId "com.benny.openlauncher"
        versionCode 37
        versionName "0.6.1"
    }

    productFlavors {
        flavorDefault {
        }

        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }

        flavorNightly {
            buildConfigField "boolean", "IS_NIGHTLY_BUILD", "true"

            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = new Date().format('yyMMdd')
            applicationId "com.benny.openlauncher.nightly"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'com.android.support') {
                    if (details.requested.name != 'multidex' && details.requested.name != 'multidex-instrumentation') {
                        details.useVersion "${version_library_appcompat}"
                    }
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE-LGPL-2.1.txt'
        exclude 'META-INF/LICENSE-LGPL-3.txt'
        exclude 'META-INF/LICENSE-W3C-TEST'
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'InvalidPackage'
    }
}

dependencies {
    // Support libraries
    implementation "com.android.support:recyclerview-v7:${version_library_appcompat}"
    implementation "com.android.support:appcompat-v7:${version_library_appcompat}"
    implementation "com.android.support:cardview-v7:${version_library_appcompat}"
    implementation "com.android.support:design:${version_library_appcompat}"
    implementation "com.android.support:support-v13:${version_library_appcompat}"
    implementation "com.android.support:preference-v7:${version_library_appcompat}"
    implementation "com.android.support:preference-v14:${version_library_appcompat}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // UI Libs
    implementation 'com.mikepenz:fastadapter:3.2.3@aar'
    implementation 'com.mikepenz:fastadapter-commons:3.0.0@aar'
    implementation 'com.mikepenz:fastadapter-extensions:3.0.0@aar'
    implementation 'jp.wasabeef:recyclerview-animators:2.2.7'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'agency.tango.android:material-intro-screen:0.0.5'
    implementation 'cat.ereza:customactivityoncrash:2.2.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.3'
    implementation 'in.championswimmer:SimpleFingerGestures_Android_Library:1.2'
    implementation 'com.nononsenseapps:filepicker:4.2.1'

    implementation ('com.github.ozodrukh:CircularReveal:2.0.1@aar') {
        transitive = true
    }

    implementation('com.github.turing-tech:MaterialScrollBar:12.4.0') {
        exclude group: 'com.android.support'
    }

    // Tools
    implementation "com.jakewharton:butterknife:${version_library_butterknife}"

    // Processors
    def anpros = ["com.jakewharton:butterknife-compiler:${version_library_butterknife}"]
    for (anpro in anpros) {
        annotationProcessor anpro
    }
}

repositories {
    mavenCentral()
}
